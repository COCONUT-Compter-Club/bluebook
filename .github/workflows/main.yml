name: CI/CD for COCONUT Bluebook

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean cache and build
        run: |
          rm -rf .cache build

      - name: Build with Antora
        run: |
          docker run -u $(id -u) -v $PWD:/antora:Z --rm -t antora/antora --cache-dir=./.cache --stacktrace antora-playbook.yml

      - name: Debug build directory
        run: |
          echo "Checking build directory in runner"
          ls -lR build
          if [ -d "build/bluebook" ]; then echo "Subdirectory build/bluebook exists"; fi
          if [ -d "build/bluebook/draft" ]; then echo "Subdirectory build/bluebook/draft exists"; fi
          find build -type f -name "*.html"

      - name: Validate build structure
        run: |
          echo "Validating expected files"
          if [ -f "build/index.html" ] && [ -f "build/404.html" ] && [ -d "build/bluebook/draft" ]; then
            echo "Build structure is valid (bluebook/draft)"
          elif [ -f "build/index.html" ] && [ -f "build/404.html" ] && [ -d "build/draft" ]; then
            echo "Build structure is valid (draft)"
          else
            echo "Error: Expected build structure not found"
            ls -lR build
            exit 1
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: bluebook-build
          path: build/
          retention-days: 1

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: bluebook-build
          path: build/

      - name: Compress build directory
        run: |
          echo "Compressing build to tarball"
          if [ -d "build/bluebook" ]; then
            tar -czf bluebook-build.tar.gz -C build/bluebook .
          else
            tar -czf bluebook-build.tar.gz -C build .
          fi
          ls -lh bluebook-build.tar.gz

      - name: Debug secrets
        run: |
          echo "VPS_HOST is set: ${{ secrets.VPS_HOST != '' }}"
          echo "VPS_USERNAME is set: ${{ secrets.VPS_USERNAME != '' }}"
          echo "VPS_SSH_KEY is set: ${{ secrets.VPS_SSH_KEY != '' }}"
          echo "VPS_SSH_PORT is set: ${{ secrets.VPS_SSH_PORT != '' }}"

      - name: Test SSH connectivity
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            whoami
            hostname
            netstat -tuln | grep :${{ secrets.VPS_SSH_PORT }}

      - name: Prepare VPS directories
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            rm -rf /home/gusdur/bluebook-coconut/build
            mkdir -p /home/gusdur/bluebook-coconut/build
            chmod 755 /home/gusdur/bluebook-coconut/build

      - name: Upload tarball to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: bluebook-build.tar.gz
          target: /home/gusdur/bluebook-coconut/

      - name: Extract tarball on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            tar -xzf /home/gusdur/bluebook-coconut/bluebook-build.tar.gz -C /home/gusdur/bluebook-coconut/build/
            rm /home/gusdur/bluebook-coconut/bluebook-build.tar.gz
            ls -l /home/gusdur/bluebook-coconut/build

      - name: Move build to web directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            sudo rm -rf /var/www/html/build
            sudo cp -r /home/gusdur/bluebook-coconut/build /var/www/html/build
            sudo chown -R www-data:www-data /var/www/html/build
            sudo chmod -R 755 /var/www/html/build
            ls -la /var/www/html/build

      - name: Finalize deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "Finalizing deployment"
            ls -l /var/www/html/build/bluebook/draft
            if [ -f "/var/www/html/build/bluebook/draft/coconut-draft-inesa.html" ]; then
              echo "Deployment validated: coconut-draft-inesa.html exists"
            else
              echo "Error: Deployment failed, coconut-draft-inesa.html not found"
              exit 1
            fi
            echo "Deployment completed"

      - name: Auto-deploy to live directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "Deploying to live directory /var/www/html"
            sudo rm -rf /var/www/html/*
            sudo cp -r /var/www/html/build/* /var/www/html/
            sudo chown -R www-data:www-data /var/www/html
            sudo chmod -R 755 /var/www/html
            ls -la /var/www/html
