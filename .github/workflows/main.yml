name: CI/CD for COCONUT Bluebook

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Clean previous build
      - name: Clean cache and build
        run: |
          rm -rf .cache build

      # Step 3: Build documentation with Antora
      - name: Build with Antora
        run: |
          docker run -u $(id -u) -v $PWD:/antora:Z --rm -t antora/antora --cache-dir=./.cache --stacktrace antora-playbook.yml

      # Step 4: Verify build output
      - name: Verify build directory
        run: |
          echo "Build directory contents:"
          ls -l build
          echo "Bluebook directory contents:"
          ls -l build/bluebook

      # Step 5: Setup SSH environment
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host ${{ secrets.VPS_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.VPS_USERNAME }}" >> ~/.ssh/config
          echo "  Port ${{ secrets.VPS_SSH_PORT }}" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  ServerAliveInterval 30" >> ~/.ssh/config
          echo "  TCPKeepAlive yes" >> ~/.ssh/config

      # Step 6: Prepare VPS directory
      - name: Prepare VPS directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "Creating deployment directory..."
            mkdir -p /home/gusdur/bluebook/build
            chmod -R 775 /home/gusdur/bluebook
            echo "Directory ready:"
            ls -la /home/gusdur/bluebook

      # Step 7: Upload build files with rsync
      - name: Upload build files
        run: |
          rsync -avz --delete --progress \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./build/ ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }}:/home/gusdur/bluebook/build/
        env:
          RSYNC_RSH: ssh

      # Step 8: Deploy to web directory
      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            # Set timestamp for backup
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            
            # Create backup directory
            BACKUP_DIR="/var/www/html_backup_$TIMESTAMP"
            sudo mkdir -p "$BACKUP_DIR"
            
            # Backup existing files if they exist
            if [ -d "/var/www/html" ]; then
              echo "Backing up existing files to $BACKUP_DIR"
              sudo cp -rp /var/www/html/* "$BACKUP_DIR"/
            else
              echo "No existing files to backup"
              sudo mkdir -p /var/www/html
            fi
            
            # Clear target directory
            echo "Clearing target directory..."
            sudo rm -rf /var/www/html/*
            
            # Copy new files
            echo "Copying new files..."
            sudo cp -rp /home/gusdur/bluebook/build/* /var/www/html/
            
            # Set proper permissions
            echo "Setting permissions..."
            sudo chown -R $USER:www-data /var/www/html
            sudo chmod -R 775 /var/www/html
            sudo find /var/www/html -type f -exec chmod 664 {} \;
            
            # Verify deployment
            echo "Deployment verification:"
            ls -la /var/www/html
            
            # Restart web server if needed
            if systemctl is-active --quiet nginx; then
              echo "Restarting nginx..."
              sudo systemctl restart nginx
            elif systemctl is-active --quiet apache2; then
              echo "Restarting apache2..."
              sudo systemctl restart apache2
            fi
            
            echo "Deployment completed successfully at $(date)"

      # Step 9: Final verification
      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "Final deployment verification:"
            echo "Web directory contents:"
            ls -la /var/www/html
            echo "Web directory permissions:"
            ls -ld /var/www/html
            echo "Recent modified files:"
            find /var/www/html -type f -printf "%T+ %p\n" | sort -r | head -n 10
            echo "Web server status:"
            systemctl status nginx || systemctl status apache2
